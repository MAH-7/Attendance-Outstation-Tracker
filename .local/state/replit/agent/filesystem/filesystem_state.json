{"file_contents":{"README.md":{"content":"# Hello Node!\n\nThis project includes a Node.js server script and a web page that connects to it. The front-end page presents a form the visitor can use to submit a color name, sending the submitted value to the back-end API running on the server. The server returns info to the page that allows it to update the display with the chosen color. 🎨\n\n[Node.js](https://nodejs.org/en/about/) is a popular runtime that lets you run server-side JavaScript. This project uses the [Fastify](https://www.fastify.io/) framework and explores basic templating with [Handlebars](https://handlebarsjs.com/).\n\n_Last updated: 14 August 2023_\n\n## Prerequisites\n\nYou'll get best use out of this project if you're familiar with basic JavaScript. If you've written JavaScript for client-side web pages this is a little different because it uses server-side JS, but the syntax is the same!\n\n## What's in this project?\n\n← `README.md`: That’s this file, where you can tell people what your cool website does and how you built it.\n\n← `public/style.css`: The styling rules for the pages in your site.\n\n← `server.js`: The **Node.js** server script for your new site. The JavaScript defines the endpoints in the site back-end, one to return the homepage and one to update with the submitted color. Each one sends data to a Handlebars template which builds these parameter values into the web page the visitor sees.\n\n← `package.json`: The NPM packages for your project's dependencies.\n\n← `src/`: This folder holds the site template along with some basic data files.\n\n← `src/pages/index.hbs`: This is the main page template for your site. The template receives parameters from the server script, which it includes in the page HTML. The page sends the user submitted color value in the body of a request, or as a query parameter to choose a random color.\n\n← `src/colors.json`: A collection of CSS color names. We use this in the server script to pick a random color, and to match searches against color names.\n\n← `src/seo.json`: When you're ready to share your new site or add a custom domain, change SEO/meta settings in here.\n\n## Try this next 🏗️\n\nTake a look in `TODO.md` for next steps you can try out in your new site!\n\n___Want a minimal version of this project to build your own Node.js app? Check out [Blank Node](https://glitch.com/edit/#!/remix/glitch-blank-node)!___\n\n![Glitch](https://cdn.glitch.com/a9975ea6-8949-4bab-addb-8a95021dc2da%2FLogo_Color.svg?v=1602781328576)\n\n## You built this with Glitch!\n\n[Glitch](https://glitch.com) is a friendly community where millions of people come together to build web apps and websites.\n\n- Need more help? [Check out our Help Center](https://help.glitch.com/) for answers to any common questions.\n- Ready to make it official? [Become a paid Glitch member](https://glitch.com/pricing) to boost your app with private sharing, more storage and memory, domains and more.\n","size_bytes":2913},"TODO.md":{"content":"# TODO 🚧\n\nYour new site is all yours so it doesn't matter if you break it! Try editing the code.\n\nLet's keep track of the submitted favorites using an array. First add this code near the top of `server.js` (where the comment says `ADD FAVORITES ARRAY VARIABLE`):\n\n```js\nconst favorites = [];\n```\n\nIn the `POST` route, inside the `if(color)` block, add this code to save the submitted value to the array, and write it to the console:\n\n```js\nfavorites.push(color);\nconsole.log(favorites);\n```\n\nClick __Tools__ > __Logs__ at the bottom of Glitch to see the log statement in action when you submit new colors through the form.\n\n## Keep going! 🚀\n\nClearly this is not a robust data storage approach and won't persist for long! Your Node apps can use a variety of databases, like [SQLite](https://glitch.com/~glitch-hello-sqlite) and [Airtable](https://glitch.com/~glitch-hello-airtable).\n","size_bytes":888},"replit.md":{"content":"# Office Tracker - Replit Project Documentation\n\n## Overview\nThis is an office attendance and outstation tracker application built with Node.js, Express, Socket.IO, and SQLite. The application allows employees to check in/out, register outstation trips, and manage notice board announcements.\n\n## Recent Changes (September 11, 2025)\n- **Project Import**: Successfully imported from GitHub and configured for Replit environment\n- **Server Configuration**: Updated server to bind to 0.0.0.0:5000 for Replit compatibility\n- **Workflow Setup**: Configured \"Server\" workflow to run `npm start` on port 5000\n- **Bug Fix**: Added null-check in app.js to prevent JavaScript errors on pages without notice board\n- **Deployment**: Configured for VM deployment using `npm start`\n\n## Project Architecture\n\n### Backend (server.js)\n- **Framework**: Express.js with Socket.IO for real-time updates\n- **Database**: SQLite (in-memory for development)\n- **Port**: 5000 (configured for Replit)\n- **Host**: 0.0.0.0 (required for Replit proxy)\n\n### Frontend \n- **Main Page**: `/` - Employee attendance form and current status display\n- **Dashboard**: `/dashboard` - Enhanced view with radio players and weather widget\n- **Real-time Updates**: Socket.IO for live data updates across all clients\n\n### Key Features\n1. **Attendance Tracking**: Employees can check in with automatic clock-out time calculation\n2. **Outstation Management**: Track employees on business trips with PIN protection\n3. **Notice Board**: Announcements with date-based display\n4. **Real-time Updates**: All changes broadcast live to connected clients\n5. **Dashboard Extras**: Radio players and weather widget integration\n\n### Dependencies\n- express: Web server framework\n- sqlite3: Database\n- socket.io: Real-time communication\n- body-parser: Request parsing\n- moment-timezone: Date/time handling for Malaysia timezone\n- node-cron: Scheduled tasks for daily resets\n\n### Workflow Configuration\n- **Name**: Server\n- **Command**: npm start\n- **Port**: 5000\n- **Output**: webview (for user interface)\n\n### Deployment Configuration\n- **Target**: vm (maintains server state)\n- **Command**: npm start\n- **Reason**: Uses Socket.IO and scheduled tasks requiring persistent server state\n\n## File Structure\n```\n/\n├── server.js          # Main server application\n├── package.json       # Dependencies and scripts\n├── public/            # Static frontend files\n│   ├── index.html     # Main attendance form\n│   ├── dashboard.html # Enhanced dashboard view\n│   ├── app.js         # Client-side JavaScript\n│   ├── utils.js       # Dashboard utilities\n│   └── *.css          # Stylesheets\n├── src/               # Server-side templates (unused in current setup)\n└── database.db        # SQLite database file\n```\n\n## Current Status\n✅ Server running successfully on port 5000\n✅ All dependencies installed\n✅ Workflow configured and active\n✅ Deployment settings configured\n✅ Application accessible via Replit preview\n\nThe application is now fully operational in the Replit environment and ready for use.","size_bytes":3113},"server.js":{"content":"const express = require(\"express\");\nconst { Pool } = require(\"pg\");\nconst bodyParser = require(\"body-parser\");\nconst path = require(\"path\");\nconst cron = require(\"node-cron\");\nconst http = require(\"http\");\nconst socketIo = require(\"socket.io\");\nconst moment = require(\"moment-timezone\"); // Require moment-timezone\n\nconst app = express();\nconst server = http.createServer(app);\nconst io = socketIo(server);\n\n// PostgreSQL connection pool - using Supabase\nconst pool = new Pool({\n  connectionString:\n    process.env.SUPABASE_DATABASE_URL || process.env.DATABASE_URL,\n  ssl: { rejectUnauthorized: false },\n});\n\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\napp.use(express.static(path.join(__dirname, \"public\")));\n\n// Initialize database tables\nasync function initializeDatabase() {\n  try {\n    await pool.query(`CREATE TABLE IF NOT EXISTS attendance (\n      id SERIAL PRIMARY KEY,\n      employee TEXT,\n      status TEXT,\n      destination TEXT,\n      start_date DATE,\n      end_date DATE,\n      check_in_time TEXT,\n      back_time TEXT,\n      pin TEXT\n    )`);\n\n    await pool.query(`CREATE TABLE IF NOT EXISTS outstation (\n      id SERIAL PRIMARY KEY,\n      employee VARCHAR(255) NOT NULL,\n      destination VARCHAR(255) NOT NULL,\n      start_date DATE NOT NULL,\n      end_date DATE NOT NULL,\n      pin VARCHAR(10) NOT NULL\n    )`);\n\n    await pool.query(`CREATE TABLE IF NOT EXISTS notice (\n      id SERIAL PRIMARY KEY,\n      title TEXT,\n      content TEXT,\n      notice_date TEXT\n    )`);\n\n    console.log(\"Database tables initialized successfully\");\n  } catch (err) {\n    console.error(\"Error initializing database:\", err);\n  }\n}\n\n// Format time to 12-hour format\nfunction formatTo12Hour(time) {\n  let [hours, minutes] = time.split(\":\").map(Number);\n  const ampm = hours >= 12 ? \"PM\" : \"AM\";\n  hours = hours % 12 || 12;\n  return `${hours}:${minutes < 10 ? \"0\" + minutes : minutes} ${ampm}`;\n}\n\n// Submit attendance\napp.post(\"/submit-attendance\", async (req, res) => {\n  const {\n    employee,\n    status,\n    destination,\n    start_date,\n    end_date,\n    check_in_time,\n    pin,\n  } = req.body;\n\n  console.log(\"Received Data:\", {\n    employee,\n    status,\n    destination,\n    start_date,\n    end_date,\n    check_in_time,\n  });\n\n  try {\n    let result;\n\n    if (status === \"Present\") {\n      const today = moment().tz(\"Asia/Kuala_Lumpur\").format(\"YYYY-MM-DD\");\n      let back_time = null;\n      let formatted_check_in_time = check_in_time;\n\n      if (check_in_time) {\n        const checkInDate = moment.tz(\n          check_in_time,\n          \"HH:mm\",\n          \"Asia/Kuala_Lumpur\"\n        );\n        const officeStartTime = moment.tz(\n          \"07:30\",\n          \"HH:mm\",\n          \"Asia/Kuala_Lumpur\"\n        );\n\n        // Format check-in time to 12-hour format with AM/PM\n        formatted_check_in_time = checkInDate.format(\"h:mm A\");\n\n        if (checkInDate.isBefore(officeStartTime)) {\n          checkInDate.set({ hour: 7, minute: 30 });\n        }\n\n        const dayOfWeek = checkInDate.day();\n        if (dayOfWeek >= 0 && dayOfWeek <= 3) {\n          checkInDate.add(9, \"hours\");\n        } else if (dayOfWeek === 4) {\n          checkInDate.add(7, \"hours\").add(30, \"minutes\");\n        }\n\n        back_time = checkInDate.format(\"h:mm A\");\n      }\n\n      result = await pool.query(\n        `INSERT INTO attendance (employee, status, check_in_time, back_time, start_date) \n         VALUES ($1, $2, $3, $4, $5) RETURNING id`,\n        [employee, status, formatted_check_in_time, back_time, today]\n      );\n\n      io.emit(\"newAttendance\", {\n        employee,\n        status,\n        check_in_time: formatted_check_in_time,\n        back_time,\n        start_date: today,\n        id: result.rows[0].id,\n      });\n    } else if (status === \"Outstation\") {\n      result = await pool.query(\n        `INSERT INTO outstation (employee, destination, start_date, end_date, pin) \n         VALUES ($1, $2, $3, $4, $5) RETURNING id`,\n        [employee, destination, start_date, end_date, pin]\n      );\n\n      io.emit(\"newOutstation\", {\n        employee,\n        destination,\n        start_date,\n        end_date,\n        id: result.rows[0].id,\n      });\n    }\n\n    res.redirect(\"/\");\n  } catch (err) {\n    console.error(\"Database error:\", err.message);\n    return res.status(500).send(\"Database error\");\n  }\n});\n\n// Submit notice\napp.post(\"/submit-notice\", async (req, res) => {\n  let { title, content, notice_date } = req.body;\n\n  console.log(\"Received Data:\", { title, content, notice_date });\n\n  notice_date = moment(notice_date).format(\"DD MMMM\");\n\n  try {\n    const result = await pool.query(\n      `INSERT INTO notice (title, content, notice_date) VALUES ($1, $2, $3) RETURNING id`,\n      [title, content, notice_date]\n    );\n\n    io.emit(\"newNotice\", {\n      title,\n      content,\n      notice_date,\n      id: result.rows[0].id,\n    });\n\n    res.redirect(\"/\");\n  } catch (err) {\n    console.error(\"Database error:\", err.message);\n    return res.status(500).send(\"Database error\");\n  }\n});\n\n// Get employees present today\napp.get(\"/present\", async (req, res) => {\n  try {\n    const today = moment().tz(\"Asia/Kuala_Lumpur\").format(\"YYYY-MM-DD\");\n    const result = await pool.query(\n      `SELECT employee, check_in_time, back_time FROM attendance WHERE status = 'Present' AND start_date = $1`,\n      [today]\n    );\n    res.json(result.rows);\n  } catch (err) {\n    console.error(\"Database error:\", err.message);\n    res.status(500).json({ error: \"Database error\" });\n  }\n});\n\n// Get outstation employees\napp.get(\"/outstation\", async (req, res) => {\n  try {\n    const result = await pool.query(\n      `SELECT * FROM outstation ORDER BY id DESC`\n    );\n    res.json(result.rows);\n  } catch (err) {\n    console.error(\"Database error:\", err.message);\n    res.status(500).json({ error: \"Database error\" });\n  }\n});\n\n// Get notices\napp.get(\"/notice\", async (req, res) => {\n  try {\n    const result = await pool.query(`SELECT * FROM notice`);\n    res.json(result.rows);\n  } catch (err) {\n    console.error(\"Database error:\", err.message);\n    res.status(500).json({ error: \"Database error\" });\n  }\n});\n\n// Delete outstation\napp.delete(\"/outstation/:id\", async (req, res) => {\n  const id = req.params.id;\n  const { pin } = req.body;\n\n  try {\n    const result = await pool.query(\n      `SELECT pin FROM outstation WHERE id = $1`,\n      [id]\n    );\n\n    if (!result.rows.length)\n      return res.status(500).send(\"Error fetching outstation record\");\n\n    const row = result.rows[0];\n    if (row.pin !== pin && pin !== \"9999\")\n      return res.status(403).send(\"Invalid PIN\");\n\n    await pool.query(`DELETE FROM outstation WHERE id = $1`, [id]);\n\n    io.emit(\"deleteOutstation\", { id });\n    return res.status(200).send(\"Outstation record deleted successfully\");\n  } catch (err) {\n    console.error(\"Database error:\", err.message);\n    return res.status(500).send(\"Error deleting outstation record\");\n  }\n});\n\n// Delete notice\napp.delete(\"/notice/:id\", async (req, res) => {\n  const id = req.params.id;\n  try {\n    await pool.query(`DELETE FROM notice WHERE id = $1`, [id]);\n    io.emit(\"deleteNotice\", { id });\n    return res.status(200).send(\"Notice deleted successfully\");\n  } catch (err) {\n    console.error(\"Database error:\", err.message);\n    return res.status(500).send(\"Error deleting notice\");\n  }\n});\n\n// Serve HTML\napp.get(\"/\", (req, res) =>\n  res.sendFile(path.join(__dirname, \"public/index.html\"))\n);\napp.get(\"/dashboard\", (req, res) =>\n  res.sendFile(path.join(__dirname, \"public/dashboard.html\"))\n);\n\n// Start server\nconst PORT = process.env.PORT || 5000;\n\nasync function startServer() {\n  try {\n    await initializeDatabase();\n    console.log(\"Database initialized successfully\");\n\n    server.listen(PORT, \"0.0.0.0\", () =>\n      console.log(`Server running on port ${PORT}`)\n    );\n  } catch (err) {\n    console.error(\"Failed to start server:\", err);\n    process.exit(1);\n  }\n}\n\nstartServer();\n","size_bytes":7931},"shrinkwrap.yaml":{"content":"dependencies:\n  fastify: 3.28.0\n  fastify-formbody: 5.2.0\n  fastify-static: 4.6.1\n  handlebars: 4.7.7\n  point-of-view: 5.2.0\npackages:\n  /@fastify/ajv-compiler/1.1.0:\n    dependencies:\n      ajv: 6.12.6\n    dev: false\n    resolution:\n      integrity: sha512-gvCOUNpXsWrIQ3A4aXCLIdblL0tDq42BG/2Xw7oxbil9h11uow10ztS2GuFazNBfjbrsZ5nl+nPl5jDSjj5TSg==\n  /abstract-logging/2.0.1:\n    dev: false\n    resolution:\n      integrity: sha512-2BjRTZxTPvheOvGbBslFSYOUkr+SjPtOnrLP33f+VIWLzezQpZcqVg7ja3L4dBXmzzgwT+a029jRx5PCi3JuiA==\n  /ajv/6.12.6:\n    dependencies:\n      fast-deep-equal: 3.1.3\n      fast-json-stable-stringify: 2.1.0\n      json-schema-traverse: 0.4.1\n      uri-js: 4.4.1\n    dev: false\n    resolution:\n      integrity: sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==\n  /ajv/8.11.0:\n    dependencies:\n      fast-deep-equal: 3.1.3\n      json-schema-traverse: 1.0.0\n      require-from-string: 2.0.2\n      uri-js: 4.4.1\n    dev: false\n    resolution:\n      integrity: sha512-wGgprdCvMalC0BztXvitD2hC04YffAvtsUn93JbGXYLAtCUO4xd17mCCZQxUOItiBwZvJScWo8NIvQMQ71rdpg==\n  /archy/1.0.0:\n    dev: false\n    resolution:\n      integrity: sha1-+cjBN1fMHde8N5rHeyxipcKGjEA=\n  /atomic-sleep/1.0.0:\n    dev: false\n    engines:\n      node: '>=8.0.0'\n    resolution:\n      integrity: sha512-kNOjDqAh7px0XWNI+4QbzoiR/nTkHAWNud2uvnJquD1/x5a7EQZMJT0AczqK0Qn67oY/TTQ1LbUKajZpp3I9tQ==\n  /avvio/7.2.5:\n    dependencies:\n      archy: 1.0.0\n      debug: 4.3.4\n      fastq: 1.13.0\n      queue-microtask: 1.2.3\n    dev: false\n    resolution:\n      integrity: sha512-AOhBxyLVdpOad3TujtC9kL/9r3HnTkxwQ5ggOsYrvvZP1cCFvzHWJd5XxZDFuTn+IN8vkKSG5SEJrd27vCSbeA==\n  /balanced-match/1.0.2:\n    dev: false\n    resolution:\n      integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\n  /brace-expansion/1.1.11:\n    dependencies:\n      balanced-match: 1.0.2\n      concat-map: 0.0.1\n    dev: false\n    resolution:\n      integrity: sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\n  /concat-map/0.0.1:\n    dev: false\n    resolution:\n      integrity: sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=\n  /content-disposition/0.5.4:\n    dependencies:\n      safe-buffer: 5.2.1\n    dev: false\n    engines:\n      node: '>= 0.6'\n    resolution:\n      integrity: sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==\n  /cookie/0.4.2:\n    dev: false\n    engines:\n      node: '>= 0.6'\n    resolution:\n      integrity: sha512-aSWTXFzaKWkvHO1Ny/s+ePFpvKsPnjc551iI41v3ny/ow6tBG5Vd+FuqGNhh1LxOmVzOlGUriIlOaokOvhaStA==\n  /debug/2.6.9:\n    dependencies:\n      ms: 2.0.0\n    dev: false\n    resolution:\n      integrity: sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\n  /debug/4.3.4:\n    dependencies:\n      ms: 2.1.2\n    dev: false\n    engines:\n      node: '>=6.0'\n    resolution:\n      integrity: sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==\n  /deepmerge/4.2.2:\n    dev: false\n    engines:\n      node: '>=0.10.0'\n    resolution:\n      integrity: sha512-FJ3UgI4gIl+PHZm53knsuSFpE+nESMr7M4v9QcgB7S63Kj/6WqMiFQJpBBYz1Pt+66bZpP3Q7Lye0Oo9MPKEdg==\n  /depd/1.1.2:\n    dev: false\n    engines:\n      node: '>= 0.6'\n    resolution:\n      integrity: sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak=\n  /destroy/1.0.4:\n    dev: false\n    resolution:\n      integrity: sha1-l4hXRCxEdJ5CBmE+N5RiBYJqvYA=\n  /ee-first/1.1.1:\n    dev: false\n    resolution:\n      integrity: sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0=\n  /encodeurl/1.0.2:\n    dev: false\n    engines:\n      node: '>= 0.8'\n    resolution:\n      integrity: sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=\n  /encoding-negotiator/2.0.1:\n    dev: false\n    engines:\n      node: '>=10.13.0'\n    resolution:\n      integrity: sha512-GSK7qphNR4iPcejfAlZxKDoz3xMhnspwImK+Af5WhePS9jUpK/Oh7rUdyENWu+9rgDflOCTmAojBsgsvM8neAQ==\n  /escape-html/1.0.3:\n    dev: false\n    resolution:\n      integrity: sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=\n  /etag/1.8.1:\n    dev: false\n    engines:\n      node: '>= 0.6'\n    resolution:\n      integrity: sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc=\n  /fast-decode-uri-component/1.0.1:\n    dev: false\n    resolution:\n      integrity: sha512-WKgKWg5eUxvRZGwW8FvfbaH7AXSh2cL+3j5fMGzUMCxWBJ3dV3a7Wz8y2f/uQ0e3B6WmodD3oS54jTQ9HVTIIg==\n  /fast-deep-equal/3.1.3:\n    dev: false\n    resolution:\n      integrity: sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==\n  /fast-json-stable-stringify/2.1.0:\n    dev: false\n    resolution:\n      integrity: sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\n  /fast-json-stringify/2.7.13:\n    dependencies:\n      ajv: 6.12.6\n      deepmerge: 4.2.2\n      rfdc: 1.3.0\n      string-similarity: 4.0.4\n    dev: false\n    engines:\n      node: '>= 10.0.0'\n    resolution:\n      integrity: sha512-ar+hQ4+OIurUGjSJD1anvYSDcUflywhKjfxnsW4TBTD7+u0tJufv6DKRWoQk3vI6YBOWMoz0TQtfbe7dxbQmvA==\n  /fast-redact/3.1.1:\n    dev: false\n    engines:\n      node: '>=6'\n    resolution:\n      integrity: sha512-odVmjC8x8jNeMZ3C+rPMESzXVSEU8tSWSHv9HFxP2mm89G/1WwqhrerJDQm9Zus8X6aoRgQDThKqptdNA6bt+A==\n  /fast-safe-stringify/2.1.1:\n    dev: false\n    resolution:\n      integrity: sha512-W+KJc2dmILlPplD/H4K9l9LcAHAfPtP6BY84uVLXQ6Evcz9Lcg33Y2z1IVblT6xdY54PXYVHEv+0Wpq8Io6zkA==\n  /fastify-error/0.3.1:\n    dev: false\n    resolution:\n      integrity: sha512-oCfpcsDndgnDVgiI7bwFKAun2dO+4h84vBlkWsWnz/OUK9Reff5UFoFl241xTiLeHWX/vU9zkDVXqYUxjOwHcQ==\n  /fastify-formbody/5.2.0:\n    dependencies:\n      fastify-plugin: 3.0.1\n    dev: false\n    resolution:\n      integrity: sha512-d8Y5hCL82akPyoFiXh2wYOm3es0pV9jqoPo3pO9OV2cNF0cQx39J5WAVXzCh4MSt9Z2qF4Fy5gHlvlyESwjtvg==\n  /fastify-plugin/3.0.1:\n    dev: false\n    resolution:\n      integrity: sha512-qKcDXmuZadJqdTm6vlCqioEbyewF60b/0LOFCcYN1B6BIZGlYJumWWOYs70SFYLDAH4YqdE1cxH/RKMG7rFxgA==\n  /fastify-static/4.6.1:\n    dependencies:\n      content-disposition: 0.5.4\n      encoding-negotiator: 2.0.1\n      fastify-plugin: 3.0.1\n      glob: 7.2.0\n      p-limit: 3.1.0\n      readable-stream: 3.6.0\n      send: 0.17.2\n    dev: false\n    resolution:\n      integrity: sha512-vy7N28U4AMhuOim12ZZWHulEE6OQKtzZbHgiB8Zj4llUuUQXPka0WHAQI3njm1jTCx4W6fixUHfpITxweMtAIA==\n  /fastify/3.28.0:\n    dependencies:\n      '@fastify/ajv-compiler': 1.1.0\n      abstract-logging: 2.0.1\n      avvio: 7.2.5\n      fast-json-stringify: 2.7.13\n      fastify-error: 0.3.1\n      find-my-way: 4.5.1\n      flatstr: 1.0.12\n      light-my-request: 4.9.0\n      pino: 6.14.0\n      process-warning: 1.0.0\n      proxy-addr: 2.0.7\n      rfdc: 1.3.0\n      secure-json-parse: 2.4.0\n      semver: 7.3.7\n      tiny-lru: 8.0.2\n    dev: false\n    resolution:\n      integrity: sha512-LAQtGllpkRe8L6Tpf3zdbvXzXFOrgaWV3Tbvp3xMv9ngcr9zht9U2/mo5zq9qp9kplSiBJ0w43aVAMqv6PBMbw==\n  /fastq/1.13.0:\n    dependencies:\n      reusify: 1.0.4\n    dev: false\n    resolution:\n      integrity: sha512-YpkpUnK8od0o1hmeSc7UUs/eB/vIPWJYjKck2QKIzAf71Vm1AAQ3EbuZB3g2JIy+pg+ERD0vqI79KyZiB2e2Nw==\n  /find-my-way/4.5.1:\n    dependencies:\n      fast-decode-uri-component: 1.0.1\n      fast-deep-equal: 3.1.3\n      safe-regex2: 2.0.0\n      semver-store: 0.3.0\n    dev: false\n    engines:\n      node: '>=10'\n    resolution:\n      integrity: sha512-kE0u7sGoUFbMXcOG/xpkmz4sRLCklERnBcg7Ftuu1iAxsfEt2S46RLJ3Sq7vshsEy2wJT2hZxE58XZK27qa8kg==\n  /flatstr/1.0.12:\n    dev: false\n    resolution:\n      integrity: sha512-4zPxDyhCyiN2wIAtSLI6gc82/EjqZc1onI4Mz/l0pWrAlsSfYH/2ZIcU+e3oA2wDwbzIWNKwa23F8rh6+DRWkw==\n  /forwarded/0.2.0:\n    dev: false\n    engines:\n      node: '>= 0.6'\n    resolution:\n      integrity: sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==\n  /fresh/0.5.2:\n    dev: false\n    engines:\n      node: '>= 0.6'\n    resolution:\n      integrity: sha1-PYyt2Q2XZWn6g1qx+OSyOhBWBac=\n  /fs.realpath/1.0.0:\n    dev: false\n    resolution:\n      integrity: sha1-FQStJSMVjKpA20onh8sBQRmU6k8=\n  /glob/7.2.0:\n    dependencies:\n      fs.realpath: 1.0.0\n      inflight: 1.0.6\n      inherits: 2.0.4\n      minimatch: 3.1.2\n      once: 1.4.0\n      path-is-absolute: 1.0.1\n    dev: false\n    resolution:\n      integrity: sha512-lmLf6gtyrPq8tTjSmrO94wBeQbFR3HbLHbuyD69wuyQkImp2hWqMGB47OX65FBkPffO641IP9jWa1z4ivqG26Q==\n  /handlebars/4.7.7:\n    dependencies:\n      minimist: 1.2.5\n      neo-async: 2.6.2\n      source-map: 0.6.1\n      wordwrap: 1.0.0\n    dev: false\n    engines:\n      node: '>=0.4.7'\n    hasBin: true\n    optionalDependencies:\n      uglify-js: 3.15.0\n    resolution:\n      integrity: sha512-aAcXm5OAfE/8IXkcZvCepKU3VzW1/39Fb5ZuqMtgI/hT8X2YgoMvBY5dLhq/cpOvw7Lk1nK/UF71aLG/ZnVYRA==\n  /hashlru/2.3.0:\n    dev: false\n    resolution:\n      integrity: sha512-0cMsjjIC8I+D3M44pOQdsy0OHXGLVz6Z0beRuufhKa0KfaD2wGwAev6jILzXsd3/vpnNQJmWyZtIILqM1N+n5A==\n  /http-errors/1.8.1:\n    dependencies:\n      depd: 1.1.2\n      inherits: 2.0.4\n      setprototypeof: 1.2.0\n      statuses: 1.5.0\n      toidentifier: 1.0.1\n    dev: false\n    engines:\n      node: '>= 0.6'\n    resolution:\n      integrity: sha512-Kpk9Sm7NmI+RHhnj6OIWDI1d6fIoFAtFt9RLaTMRlg/8w49juAStsrBgp0Dp4OdxdVbRIeKhtCUvoi/RuAhO4g==\n  /inflight/1.0.6:\n    dependencies:\n      once: 1.4.0\n      wrappy: 1.0.2\n    dev: false\n    resolution:\n      integrity: sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=\n  /inherits/2.0.4:\n    dev: false\n    resolution:\n      integrity: sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\n  /ipaddr.js/1.9.1:\n    dev: false\n    engines:\n      node: '>= 0.10'\n    resolution:\n      integrity: sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==\n  /json-schema-traverse/0.4.1:\n    dev: false\n    resolution:\n      integrity: sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==\n  /json-schema-traverse/1.0.0:\n    dev: false\n    resolution:\n      integrity: sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==\n  /light-my-request/4.9.0:\n    dependencies:\n      ajv: 8.11.0\n      cookie: 0.4.2\n      process-warning: 1.0.0\n      set-cookie-parser: 2.4.8\n    dev: false\n    resolution:\n      integrity: sha512-b1U3z4OVPoO/KanT14NRkXMr9rRtXAiq0ORqNrqhDyb5bGkZjAdEc6GRN1GWCfgaLBG+aq73qkCLDNeB3c2sLw==\n  /lru-cache/6.0.0:\n    dependencies:\n      yallist: 4.0.0\n    dev: false\n    engines:\n      node: '>=10'\n    resolution:\n      integrity: sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==\n  /mime/1.6.0:\n    dev: false\n    engines:\n      node: '>=4'\n    hasBin: true\n    resolution:\n      integrity: sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==\n  /minimatch/3.1.2:\n    dependencies:\n      brace-expansion: 1.1.11\n    dev: false\n    resolution:\n      integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\n  /minimist/1.2.5:\n    dev: false\n    resolution:\n      integrity: sha512-FM9nNUYrRBAELZQT3xeZQ7fmMOBg6nWNmJKTcgsJeaLstP/UODVpGsr5OhXhhXg6f+qtJ8uiZ+PUxkDWcgIXLw==\n  /ms/2.0.0:\n    dev: false\n    resolution:\n      integrity: sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=\n  /ms/2.1.2:\n    dev: false\n    resolution:\n      integrity: sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\n  /ms/2.1.3:\n    dev: false\n    resolution:\n      integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\n  /neo-async/2.6.2:\n    dev: false\n    resolution:\n      integrity: sha512-Yd3UES5mWCSqR+qNT93S3UoYUkqAZ9lLg8a7g9rimsWmYGK8cVToA4/sF3RrshdyV3sAGMXVUmpMYOw+dLpOuw==\n  /on-finished/2.3.0:\n    dependencies:\n      ee-first: 1.1.1\n    dev: false\n    engines:\n      node: '>= 0.8'\n    resolution:\n      integrity: sha1-IPEzZIGwg811M3mSoWlxqi2QaUc=\n  /once/1.4.0:\n    dependencies:\n      wrappy: 1.0.2\n    dev: false\n    resolution:\n      integrity: sha1-WDsap3WWHUsROsF9nFC6753Xa9E=\n  /p-limit/3.1.0:\n    dependencies:\n      yocto-queue: 0.1.0\n    dev: false\n    engines:\n      node: '>=10'\n    resolution:\n      integrity: sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\n  /path-is-absolute/1.0.1:\n    dev: false\n    engines:\n      node: '>=0.10.0'\n    resolution:\n      integrity: sha1-F0uSaHNVNP+8es5r9TpanhtcX18=\n  /pino-std-serializers/3.2.0:\n    dev: false\n    resolution:\n      integrity: sha512-EqX4pwDPrt3MuOAAUBMU0Tk5kR/YcCM5fNPEzgCO2zJ5HfX0vbiH9HbJglnyeQsN96Kznae6MWD47pZB5avTrg==\n  /pino/6.14.0:\n    dependencies:\n      fast-redact: 3.1.1\n      fast-safe-stringify: 2.1.1\n      flatstr: 1.0.12\n      pino-std-serializers: 3.2.0\n      process-warning: 1.0.0\n      quick-format-unescaped: 4.0.4\n      sonic-boom: 1.4.1\n    dev: false\n    hasBin: true\n    resolution:\n      integrity: sha512-iuhEDel3Z3hF9Jfe44DPXR8l07bhjuFY3GMHIXbjnY9XcafbyDDwl2sN2vw2GjMPf5Nkoe+OFao7ffn9SXaKDg==\n  /point-of-view/5.2.0:\n    dependencies:\n      fastify-plugin: 3.0.1\n      hashlru: 2.3.0\n    dev: false\n    resolution:\n      integrity: sha512-PYoeqEunutxZTmNih6NXXoz8xZZopzw2MWgBoKPLcofOJNagEoXVpzbHT30AkK/9ArKjJYrvV6iU8JAg87+VMw==\n  /process-warning/1.0.0:\n    dev: false\n    resolution:\n      integrity: sha512-du4wfLyj4yCZq1VupnVSZmRsPJsNuxoDQFdCFHLaYiEbFBD7QE0a+I4D7hOxrVnh78QE/YipFAj9lXHiXocV+Q==\n  /proxy-addr/2.0.7:\n    dependencies:\n      forwarded: 0.2.0\n      ipaddr.js: 1.9.1\n    dev: false\n    engines:\n      node: '>= 0.10'\n    resolution:\n      integrity: sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==\n  /punycode/2.1.1:\n    dev: false\n    engines:\n      node: '>=6'\n    resolution:\n      integrity: sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==\n  /queue-microtask/1.2.3:\n    dev: false\n    resolution:\n      integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==\n  /quick-format-unescaped/4.0.4:\n    dev: false\n    resolution:\n      integrity: sha512-tYC1Q1hgyRuHgloV/YXs2w15unPVh8qfu/qCTfhTYamaw7fyhumKa2yGpdSo87vY32rIclj+4fWYQXUMs9EHvg==\n  /range-parser/1.2.1:\n    dev: false\n    engines:\n      node: '>= 0.6'\n    resolution:\n      integrity: sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\n  /readable-stream/3.6.0:\n    dependencies:\n      inherits: 2.0.4\n      string_decoder: 1.3.0\n      util-deprecate: 1.0.2\n    dev: false\n    engines:\n      node: '>= 6'\n    resolution:\n      integrity: sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==\n  /require-from-string/2.0.2:\n    dev: false\n    engines:\n      node: '>=0.10.0'\n    resolution:\n      integrity: sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==\n  /ret/0.2.2:\n    dev: false\n    engines:\n      node: '>=4'\n    resolution:\n      integrity: sha512-M0b3YWQs7R3Z917WRQy1HHA7Ba7D8hvZg6UE5mLykJxQVE2ju0IXbGlaHPPlkY+WN7wFP+wUMXmBFA0aV6vYGQ==\n  /reusify/1.0.4:\n    dev: false\n    engines:\n      iojs: '>=1.0.0'\n      node: '>=0.10.0'\n    resolution:\n      integrity: sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==\n  /rfdc/1.3.0:\n    dev: false\n    resolution:\n      integrity: sha512-V2hovdzFbOi77/WajaSMXk2OLm+xNIeQdMMuB7icj7bk6zi2F8GGAxigcnDFpJHbNyNcgyJDiP+8nOrY5cZGrA==\n  /safe-buffer/5.2.1:\n    dev: false\n    resolution:\n      integrity: sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\n  /safe-regex2/2.0.0:\n    dependencies:\n      ret: 0.2.2\n    dev: false\n    resolution:\n      integrity: sha512-PaUSFsUaNNuKwkBijoAPHAK6/eM6VirvyPWlZ7BAQy4D+hCvh4B6lIG+nPdhbFfIbP+gTGBcrdsOaUs0F+ZBOQ==\n  /secure-json-parse/2.4.0:\n    dev: false\n    resolution:\n      integrity: sha512-Q5Z/97nbON5t/L/sH6mY2EacfjVGwrCcSi5D3btRO2GZ8pf1K1UN7Z9H5J57hjVU2Qzxr1xO+FmBhOvEkzCMmg==\n  /semver-store/0.3.0:\n    dev: false\n    resolution:\n      integrity: sha512-TcZvGMMy9vodEFSse30lWinkj+JgOBvPn8wRItpQRSayhc+4ssDs335uklkfvQQJgL/WvmHLVj4Ycv2s7QCQMg==\n  /semver/7.3.7:\n    dependencies:\n      lru-cache: 6.0.0\n    dev: false\n    engines:\n      node: '>=10'\n    hasBin: true\n    resolution:\n      integrity: sha512-QlYTucUYOews+WeEujDoEGziz4K6c47V/Bd+LjSSYcA94p+DmINdf7ncaUinThfvZyu13lN9OY1XDxt8C0Tw0g==\n  /send/0.17.2:\n    dependencies:\n      debug: 2.6.9\n      depd: 1.1.2\n      destroy: 1.0.4\n      encodeurl: 1.0.2\n      escape-html: 1.0.3\n      etag: 1.8.1\n      fresh: 0.5.2\n      http-errors: 1.8.1\n      mime: 1.6.0\n      ms: 2.1.3\n      on-finished: 2.3.0\n      range-parser: 1.2.1\n      statuses: 1.5.0\n    dev: false\n    engines:\n      node: '>= 0.8.0'\n    resolution:\n      integrity: sha512-UJYB6wFSJE3G00nEivR5rgWp8c2xXvJ3OPWPhmuteU0IKj8nKbG3DrjiOmLwpnHGYWAVwA69zmTm++YG0Hmwww==\n  /set-cookie-parser/2.4.8:\n    dev: false\n    resolution:\n      integrity: sha512-edRH8mBKEWNVIVMKejNnuJxleqYE/ZSdcT8/Nem9/mmosx12pctd80s2Oy00KNZzrogMZS5mauK2/ymL1bvlvg==\n  /setprototypeof/1.2.0:\n    dev: false\n    resolution:\n      integrity: sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\n  /sonic-boom/1.4.1:\n    dependencies:\n      atomic-sleep: 1.0.0\n      flatstr: 1.0.12\n    dev: false\n    resolution:\n      integrity: sha512-LRHh/A8tpW7ru89lrlkU4AszXt1dbwSjVWguGrmlxE7tawVmDBlI1PILMkXAxJTwqhgsEeTHzj36D5CmHgQmNg==\n  /source-map/0.6.1:\n    dev: false\n    engines:\n      node: '>=0.10.0'\n    resolution:\n      integrity: sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\n  /statuses/1.5.0:\n    dev: false\n    engines:\n      node: '>= 0.6'\n    resolution:\n      integrity: sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow=\n  /string-similarity/4.0.4:\n    dev: false\n    resolution:\n      integrity: sha512-/q/8Q4Bl4ZKAPjj8WerIBJWALKkaPRfrvhfF8k/B23i4nzrlRj2/go1m90In7nG/3XDSbOo0+pu6RvCTM9RGMQ==\n  /string_decoder/1.3.0:\n    dependencies:\n      safe-buffer: 5.2.1\n    dev: false\n    resolution:\n      integrity: sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==\n  /tiny-lru/8.0.2:\n    dev: false\n    engines:\n      node: '>=6'\n    resolution:\n      integrity: sha512-ApGvZ6vVvTNdsmt676grvCkUCGwzG9IqXma5Z07xJgiC5L7akUMof5U8G2JTI9Rz/ovtVhJBlY6mNhEvtjzOIg==\n  /toidentifier/1.0.1:\n    dev: false\n    engines:\n      node: '>=0.6'\n    resolution:\n      integrity: sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==\n  /uglify-js/3.15.0:\n    dev: false\n    engines:\n      node: '>=0.8.0'\n    hasBin: true\n    optional: true\n    resolution:\n      integrity: sha512-x+xdeDWq7FiORDvyIJ0q/waWd4PhjBNOm5dQUOq2AKC0IEjxOS66Ha9tctiVDGcRQuh69K7fgU5oRuTK4cysSg==\n  /uri-js/4.4.1:\n    dependencies:\n      punycode: 2.1.1\n    dev: false\n    resolution:\n      integrity: sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==\n  /util-deprecate/1.0.2:\n    dev: false\n    resolution:\n      integrity: sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=\n  /wordwrap/1.0.0:\n    dev: false\n    resolution:\n      integrity: sha1-J1hIEIkUVqQXHI0CJkQa3pDLyus=\n  /wrappy/1.0.2:\n    dev: false\n    resolution:\n      integrity: sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=\n  /yallist/4.0.0:\n    dev: false\n    resolution:\n      integrity: sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==\n  /yocto-queue/0.1.0:\n    dev: false\n    engines:\n      node: '>=10'\n    resolution:\n      integrity: sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\nregistry: 'https://registry.npmjs.org/'\nshrinkwrapMinorVersion: 9\nshrinkwrapVersion: 3\nspecifiers:\n  fastify: ^3.28.0\n  fastify-formbody: ^5.2.0\n  fastify-static: ^4.6.1\n  handlebars: ^4.7.7\n  point-of-view: ^5.2.0\n","size_bytes":19955},"public/app.js":{"content":"document.addEventListener(\"DOMContentLoaded\", function () {\n  const socket = io(); // Connect to the Socket.IO server\n\n  // Initial data fetch\n  fetchData();\n  \n  // Fetch additional dashboard data (only on dashboard page)\n  if (document.getElementById('prayer-times-container')) {\n    fetchPrayerTimes();\n  }\n  if (document.getElementById('public-holidays-container')) {\n    fetchPublicHolidays();\n  }\n\n  // Listen for new attendance data\n  socket.on(\"newAttendance\", () => {\n    fetchData(); // Fetch all data when a new attendance entry is submitted\n  });\n\n  // Listen for new outstation data\n  socket.on(\"newOutstation\", () => {\n    fetchData(); // Fetch all data when a new outstation entry is submitted\n  });\n\n  // listen for new notice data\n  socket.on(\"newNotice\", () => {\n    fetchData(); // Fetch all data when a new notice is submitted\n  });\n\n  // Listen for deletion of outstation records\n  socket.on(\"deleteOutstation\", (data) => {\n    // Re-fetch data after deletion\n    fetchData();\n  });\n\n  // Listen for deletion of notice records\n  socket.on(\"deleteNotice\", (data) => {\n    // Re-fetch data after deletion\n    fetchData();\n  });\n\n  function fetchData() {\n    fetch(\"/present\")\n      .then((response) => response.json())\n      .then((data) => {\n        updatePresentTable(data);\n      });\n\n    fetch(\"/outstation\")\n      .then((response) => response.json())\n      .then((data) => {\n        updateOutstationTable(data);\n      });\n\n    fetch(\"/notice\")\n      .then((response) => response.json())\n      .then((data) => {\n        updateNoticeTable(data);\n      });\n  }\n\n  function updatePresentTable(data) {\n    const presentTableBody = document.getElementById(\"present-employees\");\n    presentTableBody.innerHTML = \"\"; // Clear previous entries\n    data.forEach((employee) => {\n      const row = document.createElement(\"tr\");\n      row.innerHTML = `\n              <td>${employee.employee}</td>\n              <td>${employee.check_in_time}</td>\n              <td>${employee.back_time}</td>\n          `;\n      presentTableBody.appendChild(row);\n    });\n  }\n\n  // Format date function for better display\n\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const day = String(date.getDate()).padStart(2, \"0\");\n    const month = String(date.getMonth() + 1).padStart(2, \"0\"); // bulan start dari 0\n    const year = date.getFullYear(); // tahun penuh\n    return `${day}-${month}-${year}`;\n  }\n\n  function updateOutstationTable(data) {\n    const outstationTable = document.getElementById(\"outstation-employees\");\n    outstationTable.innerHTML = \"\"; // Clear previous entries\n    data.forEach((outstation) => {\n      const row = document.createElement(\"tr\");\n      row.innerHTML = `\n              <td>${outstation.employee}</td>\n              <td>${outstation.destination}</td>\n              <td>${formatDate(outstation.start_date)}</td>\n              <td>${formatDate(outstation.end_date)}</td>\n              <td>${calculateDays(\n                outstation.start_date,\n                outstation.end_date\n              )}</td>\n              <td><button class=\"delete-btn\" data-id=\"${\n                outstation.id\n              }\">X</button></td>\n          `;\n      outstationTable.appendChild(row);\n    });\n\n    // Add event listeners to delete buttons\n    document.querySelectorAll(\".delete-btn\").forEach((button) => {\n      button.addEventListener(\"click\", function () {\n        const id = this.getAttribute(\"data-id\");\n        deleteOutstation(id);\n      });\n    });\n  }\n\n  function updateNoticeTable(data) {\n    const noticeTableContainer = document.getElementById(\n      \"notice-board-container\"\n    );\n    if (!noticeTableContainer) return; // Exit if element doesn't exist\n    noticeTableContainer.innerHTML = \"\"; // Clear previous entries\n\n    data.forEach((notice) => {\n      const noticeCard = document.createElement(\"div\");\n      noticeCard.classList.add(\"notice-board\");\n      noticeCard.innerHTML = `\n      <h3 class=\"notice-date\">${notice.notice_date}</h3>\n      <div class=\"notice-content\">\n      <button class=\"delete-btn-notice\" data-id=\"${notice.id}\">&times;</button>\n          <h3>${notice.title}</h3>\n          <p>${notice.content}</p>\n        </div>\n      `;\n\n      noticeTableContainer.appendChild(noticeCard);\n    });\n\n    // Add event listeners to delete buttons\n    document.querySelectorAll(\".delete-btn-notice\").forEach((button) => {\n      button.addEventListener(\"click\", function () {\n        const id = this.getAttribute(\"data-id\");\n        deleteNotice(id);\n      });\n    });\n  }\n\n  function calculateDays(start, end) {\n    const startDate = new Date(start);\n    const endDate = new Date(end);\n    const timeDiff = Math.abs(endDate - startDate);\n    return Math.ceil(timeDiff / (1000 * 3600 * 24)) + 1 + \" days\";\n  }\n\n  function deleteOutstation(id) {\n    const pin = prompt(\"Enter your 4-digit PIN to confirm deletion:\"); // Prompt for PIN\n\n    if (pin && /^\\d{4}$/.test(pin)) {\n      // Validate PIN format (4 digits)\n      fetch(`/outstation/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ pin }), // Send the PIN in the request body\n      }).then((response) => {\n        if (response.ok) {\n          // No need to call fetchData here since the socket will handle it\n        } else {\n          alert(\"Failed to delete outstation record: \" + response.statusText);\n        }\n      });\n    } else {\n      alert(\"Please enter a valid 4-digit PIN.\");\n    }\n  }\n\n  function deleteNotice(id) {\n    fetch(`/notice/${id}`, {\n      method: \"DELETE\",\n    }).then((response) => {\n      if (response.ok) {\n        // No need to call fetchData here since the socket will handle it\n      } else {\n        alert(\"Failed to delete notice: \" + response.statusText);\n      }\n    });\n  }\n\n  // Fetch Prayer Times for Kuala Terengganu (TRG01)\n  async function fetchPrayerTimes() {\n    try {\n      // Try working API with proper CORS handling\n      const response = await fetch('https://api.aladhan.com/v1/timingsByCity?city=Kuala%20Terengganu&country=Malaysia&method=3');\n      \n      if (response.ok) {\n        const data = await response.json();\n        if (data && data.data && data.data.timings) {\n          updatePrayerTimesAladhan(data.data);\n          return;\n        }\n      }\n      \n      // Fallback to static times if API fails\n      displayStaticPrayerTimes();\n      \n    } catch (error) {\n      console.warn('Prayer API unavailable, showing static times');\n      displayStaticPrayerTimes();\n    }\n  }\n\n  function displayStaticPrayerTimes() {\n    // Check if we're on the dashboard page\n    if (!document.getElementById('prayer-times-container')) {\n      return; // Exit if not on dashboard page\n    }\n    \n    const hijriElement = document.getElementById('hijri-date');\n    if (hijriElement) {\n      hijriElement.textContent = 'Prayer times service temporarily unavailable';\n    }\n    \n    // Show approximate times for Kuala Terengganu in 12-hour format\n    const staticTimes = {\n      'imsak-time': '5:40 AM',\n      'fajr-time': '5:50 AM',\n      'sunrise-time': '7:00 AM',\n      'dhuhr-time': '1:10 PM',\n      'asr-time': '4:20 PM',\n      'maghrib-time': '7:15 PM',\n      'isha-time': '8:25 PM'\n    };\n    \n    Object.keys(staticTimes).forEach(id => {\n      const element = document.getElementById(id);\n      if (element) {\n        element.textContent = staticTimes[id];\n      }\n    });\n  }\n\n  function convertTo12Hour(time24) {\n    if (!time24 || time24 === '--:--') return '--:--';\n    const [hours, minutes] = time24.split(':');\n    const hour12 = hours % 12 || 12;\n    const ampm = hours >= 12 ? 'PM' : 'AM';\n    return `${hour12}:${minutes} ${ampm}`;\n  }\n\n  function updatePrayerTimes(data) {\n    const times = data.times;\n    const elements = {\n      'imsak-time': convertTo12Hour(times.imsak) || '--:--',\n      'fajr-time': convertTo12Hour(times.fajr) || '--:--',\n      'sunrise-time': convertTo12Hour(times.sunrise) || '--:--',\n      'dhuhr-time': convertTo12Hour(times.dhuhr) || '--:--',\n      'asr-time': convertTo12Hour(times.asr) || '--:--',\n      'maghrib-time': convertTo12Hour(times.maghrib) || '--:--',\n      'isha-time': convertTo12Hour(times.isha) || '--:--'\n    };\n    \n    Object.keys(elements).forEach(id => {\n      const element = document.getElementById(id);\n      if (element) {\n        element.textContent = elements[id];\n      }\n    });\n    \n    // Update date\n    const hijriElement = document.getElementById('hijri-date');\n    if (hijriElement) {\n      const today = new Date();\n      const options = { \n        weekday: 'long', \n        year: 'numeric', \n        month: 'long', \n        day: 'numeric' \n      };\n      hijriElement.textContent = \n        `${today.toLocaleDateString('en-MY', options)} | ${data.location || 'Kuala Terengganu'}`;\n    }\n  }\n\n  function updatePrayerTimesAzanPro(data) {\n    if (data && data.times) {\n      const times = data.times;\n      const elements = {\n        'imsak-time': convertTo12Hour(times.imsak) || '--:--',\n        'fajr-time': convertTo12Hour(times.fajr) || '--:--',\n        'sunrise-time': convertTo12Hour(times.sunrise) || '--:--',\n        'dhuhr-time': convertTo12Hour(times.dhuhr) || '--:--',\n        'asr-time': convertTo12Hour(times.asr) || '--:--',\n        'maghrib-time': convertTo12Hour(times.maghrib) || '--:--',\n        'isha-time': convertTo12Hour(times.isha) || '--:--'\n      };\n      \n      Object.keys(elements).forEach(id => {\n        const element = document.getElementById(id);\n        if (element) {\n          element.textContent = elements[id];\n        }\n      });\n      \n      const hijriElement = document.getElementById('hijri-date');\n      if (hijriElement) {\n        const today = new Date();\n        hijriElement.textContent = \n          `${today.toLocaleDateString('en-MY')} | Kuala Terengganu`;\n      }\n    }\n  }\n\n  function updatePrayerTimesAladhan(data) {\n    if (data && data.timings) {\n      const timings = data.timings;\n      const elements = {\n        'imsak-time': convertTo12Hour(timings.Imsak) || '--:--',\n        'fajr-time': convertTo12Hour(timings.Fajr) || '--:--',\n        'sunrise-time': convertTo12Hour(timings.Sunrise) || '--:--',\n        'dhuhr-time': convertTo12Hour(timings.Dhuhr) || '--:--',\n        'asr-time': convertTo12Hour(timings.Asr) || '--:--',\n        'maghrib-time': convertTo12Hour(timings.Maghrib) || '--:--',\n        'isha-time': convertTo12Hour(timings.Isha) || '--:--'\n      };\n      \n      Object.keys(elements).forEach(id => {\n        const element = document.getElementById(id);\n        if (element) {\n          element.textContent = elements[id];\n        }\n      });\n      \n      const hijriElement = document.getElementById('hijri-date');\n      if (hijriElement) {\n        const today = new Date();\n        const options = { \n          weekday: 'long', \n          year: 'numeric', \n          month: 'long', \n          day: 'numeric' \n        };\n        const hijriDate = data.date?.hijri ? `${data.date.hijri.day} ${data.date.hijri.month.en} ${data.date.hijri.year}` : '';\n        hijriElement.textContent = \n          `${today.toLocaleDateString('en-MY', options)} | ${hijriDate} | Kuala Terengganu`;\n      }\n    }\n  }\n\n  function updatePrayerTimesGovMY(prayerData) {\n    if (prayerData) {\n      const elements = {\n        'imsak-time': convertTo12Hour(prayerData.imsak) || '--:--',\n        'fajr-time': convertTo12Hour(prayerData.fajr) || '--:--',\n        'sunrise-time': convertTo12Hour(prayerData.syuruk) || '--:--',\n        'dhuhr-time': convertTo12Hour(prayerData.dhuhr) || '--:--',\n        'asr-time': convertTo12Hour(prayerData.asr) || '--:--',\n        'maghrib-time': convertTo12Hour(prayerData.maghrib) || '--:--',\n        'isha-time': convertTo12Hour(prayerData.isha) || '--:--'\n      };\n      \n      Object.keys(elements).forEach(id => {\n        const element = document.getElementById(id);\n        if (element) {\n          element.textContent = elements[id];\n        }\n      });\n      \n      const hijriElement = document.getElementById('hijri-date');\n      if (hijriElement) {\n        hijriElement.textContent = \n          `${prayerData.date} | ${prayerData.hijri || ''} | Kuala Terengganu`;\n      }\n    }\n  }\n\n  // Fetch Malaysia Public Holidays\n  async function fetchPublicHolidays() {\n    try {\n      // Using free Nager.Date API (no API key required)\n      const currentYear = new Date().getFullYear();\n      const response = await fetch(`https://date.nager.at/api/v3/PublicHolidays/${currentYear}/MY`);\n      \n      if (response.ok && response.headers.get('content-type')?.includes('application/json')) {\n        const holidays = await response.json();\n        updatePublicHolidays(holidays);\n        return;\n      }\n      \n      // Fallback to static holidays\n      displayFallbackHolidays();\n      \n    } catch (error) {\n      console.error('Error fetching public holidays:', error);\n      displayFallbackHolidays();\n    }\n  }\n\n  function updatePublicHolidays(holidays) {\n    const holidaysList = document.getElementById('holidays-list');\n    if (!holidaysList) return;\n    \n    holidaysList.innerHTML = '';\n    \n    // Get today's date for comparison\n    const today = new Date();\n    const currentYear = today.getFullYear();\n    \n    // Sort holidays by date\n    holidays.sort((a, b) => new Date(a.date) - new Date(b.date));\n    \n    // Show only upcoming holidays (next 8 for better display)\n    const upcomingHolidays = holidays.filter(holiday => {\n      const holidayDate = new Date(holiday.date);\n      // Include today's date if it's a holiday\n      const todayStart = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n      return holidayDate >= todayStart;\n    }).slice(0, 8);\n    \n    if (upcomingHolidays.length === 0) {\n      holidaysList.innerHTML = `<div style=\"text-align: center; color: #7f8c8d; padding: 20px;\">All ${currentYear} holidays have passed.<br>Will show ${currentYear + 1} holidays when available.</div>`;\n      return;\n    }\n    \n    upcomingHolidays.forEach(holiday => {\n      const holidayDate = new Date(holiday.date);\n      const isToday = holidayDate.toDateString() === today.toDateString();\n      \n      const holidayItem = document.createElement('div');\n      holidayItem.className = `holiday-item ${isToday ? 'today' : ''}`;\n      \n      // Calculate days until holiday\n      const timeDiff = holidayDate - today;\n      const daysUntil = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\n      \n      let dateDisplay = holidayDate.toLocaleDateString('en-MY', { \n        month: 'short', \n        day: 'numeric' \n      });\n      \n      if (isToday) {\n        dateDisplay += ' (Today!)';\n      } else if (daysUntil === 1) {\n        dateDisplay += ' (Tomorrow)';\n      } else if (daysUntil <= 7) {\n        dateDisplay += ` (${daysUntil} days)`;\n      }\n      \n      holidayItem.innerHTML = `\n        <span class=\"holiday-name\">${holiday.name}</span>\n        <span class=\"holiday-date\">${dateDisplay}</span>\n      `;\n      \n      holidaysList.appendChild(holidayItem);\n    });\n  }\n\n  function displayFallbackHolidays() {\n    // Check if we're on the dashboard page\n    if (!document.getElementById('public-holidays-container')) {\n      return; // Exit if not on dashboard page\n    }\n    \n    const holidaysList = document.getElementById('holidays-list');\n    if (!holidaysList) return;\n    const currentYear = new Date().getFullYear();\n    \n    // Basic list of major Malaysian holidays\n    const majorHolidays = [\n      { name: 'New Year\\'s Day', date: `${currentYear}-01-01` },\n      { name: 'Chinese New Year', date: `${currentYear}-01-29` },\n      { name: 'Labour Day', date: `${currentYear}-05-01` },\n      { name: 'Wesak Day', date: `${currentYear}-05-12` },\n      { name: 'Hari Raya Aidilfitri', date: `${currentYear}-06-25` },\n      { name: 'Malaysia Day', date: `${currentYear}-09-16` },\n      { name: 'Deepavali', date: `${currentYear}-10-21` },\n      { name: 'Christmas Day', date: `${currentYear}-12-25` }\n    ];\n    \n    holidaysList.innerHTML = '';\n    \n    const today = new Date();\n    const upcomingHolidays = majorHolidays.filter(holiday => {\n      const holidayDate = new Date(holiday.date);\n      return holidayDate >= today;\n    });\n    \n    if (upcomingHolidays.length === 0) {\n      holidaysList.innerHTML = '<div style=\"text-align: center; color: #7f8c8d;\">Major holidays for this year</div>';\n      upcomingHolidays.push(...majorHolidays.slice(0, 5));\n    }\n    \n    upcomingHolidays.forEach(holiday => {\n      const holidayDate = new Date(holiday.date);\n      const isToday = holidayDate.toDateString() === today.toDateString();\n      \n      const holidayItem = document.createElement('div');\n      holidayItem.className = `holiday-item ${isToday ? 'today' : ''}`;\n      \n      holidayItem.innerHTML = `\n        <span class=\"holiday-name\">${holiday.name}</span>\n        <span class=\"holiday-date\">${holidayDate.toLocaleDateString('en-MY', { \n          month: 'short', \n          day: 'numeric' \n        })}</span>\n      `;\n      \n      holidaysList.appendChild(holidayItem);\n    });\n  }\n});\n","size_bytes":17079},"public/dashboard.css":{"content":"body {\n  font-family: Arial, sans-serif;\n  margin: 20px;\n  background-color: #f5f5f5;\n}\n\nbutton {\n  padding: 4px;\n  /* margin-bottom: 10px;\n  margin-left: 20px; */\n  border: 1px solid #bdc3c7;\n  border-radius: 4px;\n  font-size: 10px; /* Prevent zooming */\n}\n\nbutton {\n  background-color: #3498db;\n  color: white;\n  font-size: 10px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\nbutton:hover {\n  background-color: #2980b9;\n}\n\nsection {\n  display: flex;\n  justify-content: space-between;\n}\n\n.table-container {\n  box-sizing: border-box;\n  padding: 0 10px;\n}\n\n.table-container.office {\n  width: 35%; /* Smaller table for Employees In Office */\n  margin-bottom: 20px;\n}\n\n.table-container.outstation {\n  width: 60%; /* Larger table for Employees On Outstation */\n  margin-bottom: 20px;\n}\n\nh2 {\n  text-align: center;\n  margin-bottom: 10px;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  background-color: white;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\nth,\ntd {\n  padding: 10px;\n  border: 1px solid #ccc;\n  text-align: center;\n}\n\nthead {\n  background-color: #3498db;\n  color: white;\n}\n\ntbody tr:nth-child(even) {\n  background-color: #f2f2f2;\n}\n\ntbody tr:hover {\n  background-color: #e6e6e6;\n}\n\nth {\n  background-color: #3498db;\n}\n\ntd {\n  background-color: #ffffff;\n}\n\n.WPLw-elem {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  background-color: #fdfdfd;\n  color: #393939;\n  height: 74px;\n  width: 30%;\n  border-radius: 8px;\n  overflow: hidden;\n  -webkit-transition: all 0.3s;\n  transition: all 0.3s;\n}\n.WPLw-elem * {\n  box-sizing: border-box;\n}\n.WPLw-elem__img {\n  width: 74px;\n  height: 74px;\n  -ms-flex-negative: 0;\n  flex-shrink: 0;\n}\n.WPLw-elem__img img {\n  display: block;\n  width: 100%;\n  height: 100%;\n  -o-object-fit: cover;\n  object-fit: cover;\n}\n.WPLw-elem__content {\n  -webkit-box-flex: 1;\n  -ms-flex-positive: 1;\n  flex-grow: 1;\n  min-width: 1px;\n  max-width: 100%;\n  padding: 12px;\n  position: relative;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n  -ms-flex-direction: column;\n  flex-direction: column;\n  -webkit-box-pack: center;\n  -ms-flex-pack: center;\n  justify-content: center;\n}\n.WPLw-elem__player {\n  width: 100%;\n  height: 100%;\n}\n.WPLw-elem__player-body {\n  padding: 16px 0;\n  position: absolute;\n  z-index: 5;\n  top: 0;\n  left: 76px;\n  height: 100%;\n  width: calc(100% - 108px);\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n  -ms-flex-direction: column;\n  flex-direction: column;\n  -webkit-box-pack: center;\n  -ms-flex-pack: center;\n  justify-content: center;\n}\n\n.WPLplayer-styled .mejs__container {\n  height: 100% !important;\n  width: 100% !important;\n  background: 0 0;\n}\n.WPLplayer-styled .mejs__container:focus {\n  outline: 0;\n}\n.WPLplayer-styled .mejs__button > button {\n  margin: 0;\n}\n.WPLplayer-styled .mejs__play > button {\n  background: #fb0\n    url(https://online-radio.my/templates/my/images/play-mejs.svg) no-repeat 50%\n    50%;\n}\n.WPLplayer-styled .mejs__pause > button {\n  background: #c68f04\n    url(https://online-radio.my/templates/my/images/pause-mejs.svg) no-repeat\n    50% 50%;\n}\n.WPLplayer-styled .mejs__replay > button {\n  background: #fb0\n    url(https://online-radio.my/templates/my/images/replay-mejs.svg) no-repeat\n    50% 50%;\n}\n.WPLplayer-styled .mejs__playpause-button {\n  margin-right: 16px;\n}\n.WPLplayer-styled .mejs__time-buffering,\n.WPLplayer-styled .mejs__time-rail {\n  border-radius: 50%;\n}\n.WPLplayer-styled .mejs__time-rail {\n  position: absolute;\n  left: -1px;\n  top: -1px;\n  padding: 0;\n  margin: 0;\n  pointer-events: none;\n}\n.WPLplayer-styled .mejs__time-total {\n  margin: 0;\n  background: 0 0;\n}\n.WPLplayer-styled .mejs__time-buffering {\n  background: #c68f04;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  -webkit-box-pack: center;\n  -ms-flex-pack: center;\n  justify-content: center;\n  position: relative;\n  -webkit-animation: none;\n  animation: none;\n}\n.WPLplayer-styled .mejs__time-buffering:after {\n  content: \"\";\n  background: url(https://online-radio.my/templates/my/images/loading.svg)\n    no-repeat 0 0 / contain;\n  will-change: transform;\n  -webkit-animation: WPLrotateBuffer 1.5s linear infinite;\n  animation: WPLrotateBuffer 1.5s linear infinite;\n}\n.WPLplayer-styled .mejs__time-current,\n.WPLplayer-styled .mejs__time-float,\n.WPLplayer-styled .mejs__time-handle,\n.WPLplayer-styled .mejs__time-loaded {\n  display: none;\n}\n.WPLplayer-styled_v2 {\n  width: 100%;\n}\n.WPLplayer-styled_v2,\n.WPLplayer-styled_v2 .mejs__controls,\n.WPLplayer-styled_v2 .mejs__playpause-button,\n.WPLplayer-styled_v2 .mejs__playpause-button > button {\n  height: 48px;\n}\n.WPLplayer-styled_v2 .mejs__playpause-button,\n.WPLplayer-styled_v2 .mejs__playpause-button > button {\n  width: 48px;\n  border-radius: 50%;\n}\n.WPLplayer-styled_v2 .mejs__controls {\n  width: 100%;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  background: 0 0 !important;\n  padding: 0;\n}\n.WPLplayer-styled_v2 .mejs__volume-button {\n  margin-left: auto;\n}\n.WPLplayer-styled_v2 .mejs__volume-button > button {\n  display: none;\n}\n.WPLplayer-styled_v2 .mejs__play > button {\n  background-size: 18px 18px;\n}\n.WPLplayer-styled_v2 .mejs__pause > button {\n  background-size: 24px 24px;\n}\n.WPLplayer-styled_v2 .mejs__time-buffering {\n  width: 50px;\n  height: 50px;\n}\n.WPLplayer-styled_v2 .mejs__time-buffering:after {\n  width: 25px;\n  height: 25px;\n}\n.WPLplayer-styled_v2 .mejs__volume-slider {\n  display: block !important;\n  bottom: 0 !important;\n  background: 0 0 !important;\n}\n.WPLplayer-styled_v2 .mejs__volume-total {\n  top: 0;\n  background-color: rgba(57, 57, 57, 0.1);\n  border: none;\n}\n.WPLplayer-styled_v2 .mejs__volume-button,\n.WPLplayer-styled_v2 .mejs__volume-slider,\n.WPLplayer-styled_v2 .mejs__volume-total {\n  height: 42px !important;\n  width: 8px !important;\n  border-radius: 2px !important;\n}\n.WPLplayer-styled_v2 .mejs__volume-current {\n  background: #393939;\n}\n.WPLplayer-styled_v2 .mejs__volume-handle {\n  display: none;\n}\n@-webkit-keyframes WPLrotateBuffer {\n  to {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n@keyframes WPLrotateBuffer {\n  to {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n/* Minimalist Horizontal Card */\n\n#notice-board-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  gap: 10px;\n}\n\n.notice-board {\n  display: flex;\n  align-items: flex-start;\n  position: relative;\n  background-color: #f8f9fa;\n  border-radius: 6px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.08);\n  margin: 10px 0;\n  padding: 0 10px 10px 0;\n  flex: 0 0 45%;\n  border-left: 4px solid #3498db;\n}\n\n.delete-btn-notice {\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  background: none;\n  border: none;\n  font-size: 18px;\n  color: #ff4d4d;\n  cursor: pointer;\n  font-weight: bold;\n  padding: 5px 10px;\n}\n\n.delete-btn-notice:hover {\n  color: #d60000;\n}\n\n.notice-date {\n  font-size: 0.9rem;\n  color: #fff;\n  background-color: #3498db;\n  font-weight: bold;\n  padding: 8px;\n  border-radius: 0 6px 6px 0;\n  margin: 10px 10px 0 0;\n  min-width: 70px;\n  text-align: center;\n}\n\n.notice-content {\n  flex: 1;\n  padding: 0;\n}\n\n.notice-content h3 {\n  font-size: 1.1rem;\n  color: #333;\n  margin-bottom: 4px;\n  font-weight: 600;\n  word-wrap: break-word;\n  word-break: break-word;\n  max-width: calc(100% - 40px);\n}\n\n.notice-content p {\n  font-size: 16px;\n  color: #555;\n  font-style: sans-serif;\n  margin: 0;\n}\n\n/* Info Widgets Styling */\n.info-widget {\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  margin: 20px 0;\n  padding: 20px;\n  border-left: 4px solid #3498db;\n}\n\n.info-widget h3 {\n  margin: 0 0 15px 0;\n  color: #2c3e50;\n  font-size: 1.2em;\n  font-weight: 600;\n  text-align: center;\n}\n\n/* Prayer Times Styling */\n.prayer-times-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 12px;\n  margin-bottom: 15px;\n}\n\n.prayer-time {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 12px;\n  background-color: #f8f9fa;\n  border-radius: 6px;\n  border-left: 3px solid #3498db;\n}\n\n.prayer-name {\n  font-weight: 600;\n  color: #2c3e50;\n  font-size: 0.9em;\n}\n\n.prayer-time-value {\n  font-weight: 700;\n  color: #3498db;\n  font-size: 1em;\n}\n\n.prayer-date {\n  text-align: center;\n  color: #7f8c8d;\n  font-size: 0.9em;\n  font-style: italic;\n  margin-top: 10px;\n}\n\n/* Emergency Contacts Styling */\n.emergency-contacts {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 10px;\n}\n\n.contact-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 15px;\n  background-color: #f8f9fa;\n  border-radius: 6px;\n  border-left: 3px solid #3498db;\n}\n\n.contact-label {\n  font-weight: 600;\n  color: #2c3e50;\n  font-size: 0.9em;\n}\n\n.contact-number {\n  font-weight: 700;\n  color: #3498db;\n  font-size: 1em;\n  font-family: 'Courier New', monospace;\n}\n\n/* Public Holidays Styling */\n.holidays-list {\n  max-height: 300px;\n  overflow-y: auto;\n}\n\n.holiday-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 15px;\n  margin-bottom: 8px;\n  background-color: #f8f9fa;\n  border-radius: 6px;\n  border-left: 3px solid #3498db;\n  transition: background-color 0.2s;\n}\n\n.holiday-item:hover {\n  background-color: #e9ecef;\n}\n\n.holiday-item.today {\n  background-color: #fff3cd;\n  border-left-color: #ffc107;\n  font-weight: bold;\n}\n\n.holiday-name {\n  font-weight: 600;\n  color: #2c3e50;\n  font-size: 0.9em;\n  flex: 1;\n}\n\n.holiday-date {\n  font-weight: 500;\n  color: #3498db;\n  font-size: 0.85em;\n  text-align: right;\n  margin-left: 10px;\n}\n\n.holiday-item.today .holiday-date {\n  color: #856404;\n}\n\n.holiday-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 15px;\n  margin-bottom: 8px;\n  background-color: #f8f9fa;\n  border-radius: 6px;\n  border-left: 3px solid #3498db;\n}\n\n.holiday-name {\n  font-weight: 600;\n  color: #2c3e50;\n  flex: 1;\n}\n\n.holiday-date {\n  font-weight: 700;\n  color: #3498db;\n  font-size: 0.9em;\n  min-width: 80px;\n  text-align: right;\n}\n\n.holiday-item.today {\n  background-color: #fff3cd;\n  border-left-color: #ffc107;\n}\n\n.holiday-item.today .holiday-date {\n  color: #856404;\n}\n","size_bytes":10549},"public/style.css":{"content":"/* Global Styles */\nbody {\n  font-family: \"Arial\", sans-serif;\n  margin: 0;\n  padding: 20px;\n  background-color: #f4f7f9;\n  color: #333;\n}\n\nh1,\nh2 {\n  text-align: center;\n  color: #2c3e50;\n}\n\n/* Section Styles */\nsection {\n  margin-bottom: 40px;\n  padding: 20px;\n  background: #ffffff;\n  border-radius: 8px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n/* Form Styles */\nform {\n  display: flex;\n  flex-direction: column;\n  max-width: 400px;\n  margin: 0 auto;\n}\n\nlabel {\n  margin: 10px 0 5px;\n  font-weight: bold;\n}\n\ninput,\nselect,\nbutton {\n  padding: 12px;\n  margin-bottom: 10px;\n  border: 1px solid #bdc3c7;\n  border-radius: 4px;\n  font-size: 16px; /* Prevent zooming */\n}\n\ninput:focus,\nselect:focus {\n  border-color: #3498db;\n  outline: none;\n}\n\n/* Button Styles */\nbutton {\n  background-color: #3498db;\n  color: white;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\nbutton:hover {\n  background-color: #2980b9;\n}\n\n.link {\n  padding: 12px;\n  margin-bottom: 10px;\n  border: 1px solid #bdc3c7;\n  border-radius: 4px;\n  font-size: 16px;\n  background-color: #3498db;\n  color: white;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  text-decoration: none;\n}\n\n.link:hover {\n  background-color: #2980b9;\n}\n\n/* Table Styles */\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n  overflow-x: auto; /* Added for horizontal scrolling */\n}\n\ntable,\nth,\ntd {\n  border: 1px solid #bdc3c7;\n}\n\nth,\ntd {\n  padding: 12px;\n  text-align: left;\n}\n\nth {\n  background-color: #3498db;\n  color: white;\n}\n\n/* Responsive Styles */\n@media (max-width: 600px) {\n  form {\n    max-width: 100%;\n  }\n\n  table {\n    font-size: 14px;\n    display: block; /* Added to make the table scrollable */\n    overflow-x: auto; /* Added to allow horizontal scrolling */\n    white-space: nowrap; /* Prevent text from wrapping */\n  }\n\n  th,\n  td {\n    min-width: 120px; /* Ensure minimum width for table cells */\n  }\n}\n\n","size_bytes":1953},"public/utils.js":{"content":"\n\n","size_bytes":2}},"version":1}